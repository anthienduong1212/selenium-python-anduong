{"name": "test_homepage[browser=chrome]", "status": "failed", "statusDetails": {"message": "core.waiter.wait.TimeoutErrorWithScreenShot: Timeout after 4.282s (polls=14): Element(\"HOME_PAGE Search box\") should: visible. Last state: <not present> (NoSuchElementException). Locator=HOME_PAGE Search box\nScreenshot: reports/screenshots\\20251022_220935_801368.png", "trace": "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"a8f1d434cef1966bde2b9f517e1480dc\")>\n\n    def test_homepage(driver):\n    \n        home_page = HomePage()\n        result_page = ResultPage()\n        hotel_detail_page = HotelDetails()\n    \n        home_page.open(\"https://www.agoda.com\")\n    \n>       home_page.enter_text_in_autocomplete(\"Dalat\")\n\ntests\\smoke\\test_booking.py:16: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\agoda\\home_page.py:42: in enter_text_in_autocomplete\n    search_box.type(text, True)\ncore\\element\\elements.py:93: in type\n    self.should(cond_visible())\ncore\\element\\elements.py:259: in should\n    self.waiter.until(_supplier, _on_timeout, _shot)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <core.waiter.wait.Waiter object at 0x000001ECC04AF0D0>\nsupplier = <function Element.should.<locals>._supplier at 0x000001ECC04B75B0>\non_timeout = <function Element.should.<locals>._on_timeout at 0x000001ECC04B5F30>\ntake_screenshot = <function Element.should.<locals>._shot at 0x000001ECC04B6B90>\nignored_exceptions = (<class 'selenium.common.exceptions.NoSuchElementException'>, <class 'selenium.common.exceptions.StaleElementReferenceException'>)\n\n    def until(self,\n              supplier: Callable[[], T],\n              on_timeout: Callable[[], str],\n              take_screenshot: Optional[Callable[[str], bool]] = None,\n              ignored_exceptions: Optional[Iterable[Type[BaseException]]] = (\n                      NoSuchElementException,\n                      StaleElementReferenceException),\n              ) -> T:\n        start = self._clock()\n        deadline = start + self.timeout_s\n        last_exc: Optional[BaseException] = None\n        polls = 0\n    \n        while True:\n            try:\n                polls += 1\n                value = supplier()\n                if value:  # Return if truthy\n                    return value\n            except BaseException as e:\n                # Just ignore temporary exception\n                if ignored_exceptions and isinstance(e, tuple(ignored_exceptions)):\n                    last_exc = e\n                else:\n                    raise\n    \n            # Check timeout after each poll\n            now = self._clock()\n            if now >= deadline:\n                break\n            # sleep after try\n            sleep_for = min(self.poll_s, max(0.0, deadline - now))\n            if sleep_for:\n                time.sleep(sleep_for)\n    \n        # Try to take screenshot (Handle availability)\n        screenshot_path = None\n        if take_screenshot:\n            os.makedirs(self.screen_dir, exist_ok=True)\n            name = datetime.datetime.now().strftime(\"%Y%m%d_%H%M%S_%f\") + \".png\"\n            path = os.path.join(self.screen_dir, name)\n    \n            try:\n                ok = take_screenshot(path)\n                if ok:\n                    screenshot_path = path\n            except WebDriverException:\n                pass\n    \n        # On timeout handle\n        detail = on_timeout()\n        elapsed = self._clock() - start\n    \n        msg = f\"Timeout after {elapsed:.3f}s (polls={polls}): {detail}\"\n    \n        if last_exc:\n            msg += f\"\\nLast error: {type(last_exc).__name__}: {last_exc}\"\n        if screenshot_path:\n            msg += f\"\\nScreenshot: {screenshot_path}\"\n    \n>       raise TimeoutErrorWithScreenShot(msg, screenshot_path=screenshot_path)\nE       core.waiter.wait.TimeoutErrorWithScreenShot: Timeout after 4.282s (polls=14): Element(\"HOME_PAGE Search box\") should: visible. Last state: <not present> (NoSuchElementException). Locator=HOME_PAGE Search box\nE       Screenshot: reports/screenshots\\20251022_220935_801368.png\n\ncore\\waiter\\wait.py:89: TimeoutErrorWithScreenShot"}, "steps": [{"name": "Element(\"HOME_PAGE Search box\") should: visible", "status": "failed", "statusDetails": {"message": "core.waiter.wait.TimeoutErrorWithScreenShot: Timeout after 4.282s (polls=14): Element(\"HOME_PAGE Search box\") should: visible. Last state: <not present> (NoSuchElementException). Locator=HOME_PAGE Search box\nScreenshot: reports/screenshots\\20251022_220935_801368.png\n", "trace": "  File \"C:\\Users\\baon2\\IdeaProjects\\Selenium_Python\\selenium-python-anduong\\core\\reports\\reporting.py\", line 52, in step\n    yield\n  File \"C:\\Users\\baon2\\IdeaProjects\\Selenium_Python\\selenium-python-anduong\\core\\element\\elements.py\", line 259, in should\n    self.waiter.until(_supplier, _on_timeout, _shot)\n  File \"C:\\Users\\baon2\\IdeaProjects\\Selenium_Python\\selenium-python-anduong\\core\\waiter\\wait.py\", line 89, in until\n    raise TimeoutErrorWithScreenShot(msg, screenshot_path=screenshot_path)\n"}, "attachments": [{"name": "FAILED - HOME_PAGE Search box", "source": "33b6fe57-7e93-4c02-9ad5-1d852dd18e2f-attachment.attach", "type": "image/png"}, {"name": "Locator", "source": "5515434c-89e2-4280-9bfc-9b0e9b572f15-attachment.txt", "type": "text/plain"}], "start": 1761145771774, "stop": 1761145776424}], "attachments": [{"name": "test_homepage[browser=chrome] - failed", "source": "00e28779-fe20-4615-88dd-093f9030410f-attachment.png", "type": "image/png"}], "parameters": [{"name": "browser_name", "value": "'chrome'"}], "start": 1761145752244, "stop": 1761145776436, "uuid": "0366a319-6f15-465e-a2ed-892355f7e709", "historyId": "9771f70eba9e9bef755ec3b65068e341", "testCaseId": "eb56874abd49a83ec2a3c33a8631836c", "fullName": "tests.smoke.test_booking#test_homepage", "labels": [{"name": "parentSuite", "value": "tests.smoke"}, {"name": "suite", "value": "test_booking"}, {"name": "host", "value": "DELL_G3_3590"}, {"name": "thread", "value": "7228-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.smoke.test_booking"}], "titlePath": ["tests", "smoke", "test_booking.py"]}